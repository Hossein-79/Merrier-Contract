#pragma version 9

// This TEAL was generated by TEALScript v0.59.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// createApplication(uint64)void
//
// // create application method
abi_route_createApplication:
	// appPercent: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 1 0

	// contracts/Merrier.algo.ts:17
	// this.appTransactionPercent.value = appPercent
	byte 0x6170705472616e73616374696f6e50657263656e74 // "appTransactionPercent"
	frame_dig -1 // appPercent: uint64
	app_global_put
	retsub

// getMBR(pay)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_getMBR:
	byte 0x; dup // push empty bytes to fill the stack frame for this subroutine's local variables

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute getMBR(pay)uint64
	callsub getMBR
	int 1
	return

getMBR:
	proto 3 0

	// contracts/Merrier.algo.ts:22
	// preAppMBR = this.app.address.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_bury -2 // preAppMBR: uint64

	// contracts/Merrier.algo.ts:23
	// this.userData(this.txn.sender).value = { goal: 10, filled: 0, balance: 0 }
	txn Sender
	byte 0x000000000000000a00000000000000000000000000000000
	box_put

	// contracts/Merrier.algo.ts:24
	// Mbr = this.app.address.minBalance - preAppMBR
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_dig -2 // preAppMBR: uint64
	-
	frame_bury -3 // Mbr: uint64

	// contracts/Merrier.algo.ts:25
	// this.userData(this.txn.sender).delete()
	txn Sender
	box_del

	// contracts/Merrier.algo.ts:26
	// return Mbr;
	frame_dig -3 // Mbr: uint64
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// register(uint64,pay)void
abi_route_register:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// goal: uint64
	txna ApplicationArgs 1
	btoi

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute register(uint64,pay)void
	callsub register
	int 1
	return

register:
	proto 3 0

	// contracts/Merrier.algo.ts:30
	// assert(!this.userData(this.txn.sender).exists)
	txn Sender
	box_len
	swap
	pop
	!
	assert

	// contracts/Merrier.algo.ts:32
	// preAppMBR = this.app.address.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_bury -3 // preAppMBR: uint64

	// contracts/Merrier.algo.ts:33
	// this.userData(this.txn.sender).value = { goal: goal, filled: 0, balance: 0 }
	txn Sender
	frame_dig -2 // goal: uint64
	itob
	byte 0x00000000000000000000000000000000
	concat
	box_put

	// contracts/Merrier.algo.ts:35
	// verifyTxn(boxMBRPayment, {
	//       receiver: this.app.address,
	//       amount: this.app.address.minBalance - preAppMBR,
	//     })
	// verify receiver
	frame_dig -1 // boxMBRPayment: pay
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // boxMBRPayment: pay
	gtxns Amount
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_dig -3 // preAppMBR: uint64
	-
	==
	assert
	retsub

// support(address,pay)void
abi_route_support:
	byte 0x; dup // push empty bytes to fill the stack frame for this subroutine's local variables

	// address: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute support(address,pay)void
	callsub support
	int 1
	return

support:
	proto 4 0

	// contracts/Merrier.algo.ts:42
	// assert(this.userData(address).exists)
	frame_dig -2 // address: address
	box_len
	swap
	pop
	assert

	// contracts/Merrier.algo.ts:44
	// verifyTxn(payment, {
	//       receiver: this.app.address,
	//     })
	// verify receiver
	frame_dig -1 // payment: pay
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// contracts/Merrier.algo.ts:48
	// appFee = (payment.amount * this.appTransactionPercent.value) / 100
	frame_dig -1 // payment: pay
	gtxns Amount
	byte 0x6170705472616e73616374696f6e50657263656e74 // "appTransactionPercent"
	app_global_get
	*
	int 100
	/
	frame_bury -3 // appFee: uint64

	// contracts/Merrier.algo.ts:49
	// assert(appFee > 0)
	frame_dig -3 // appFee: uint64
	int 0
	>
	assert

	// contracts/Merrier.algo.ts:51
	// data = this.userData(address).value
	frame_dig -2 // address: address
	frame_bury -4 // storage key//data

	// contracts/Merrier.algo.ts:52
	// this.userData(address).value = {
	//       goal: data.goal,
	//       filled: data.filled + payment.amount - appFee,
	//       balance: data.balance + payment.amount - appFee,
	//     }
	frame_dig -2 // address: address
	frame_dig -4 // storage key//data
	box_get
	assert
	extract 0 8
	btoi
	itob
	frame_dig -4 // storage key//data
	box_get
	assert
	extract 8 8
	btoi
	frame_dig -1 // payment: pay
	gtxns Amount
	+
	frame_dig -3 // appFee: uint64
	-
	itob
	concat
	frame_dig -4 // storage key//data
	box_get
	assert
	extract 16 8
	btoi
	frame_dig -1 // payment: pay
	gtxns Amount
	+
	frame_dig -3 // appFee: uint64
	-
	itob
	concat
	box_put

	// contracts/Merrier.algo.ts:58
	// this.appBalance.value = this.appBalance.value + appFee
	byte 0x61707042616c616e6365 // "appBalance"
	byte 0x61707042616c616e6365 // "appBalance"
	app_global_get
	frame_dig -3 // appFee: uint64
	+
	app_global_put
	retsub

// withdraw(uint64)void
abi_route_withdraw:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// amount: uint64
	txna ApplicationArgs 1
	btoi

	// execute withdraw(uint64)void
	callsub withdraw
	int 1
	return

withdraw:
	proto 2 0

	// contracts/Merrier.algo.ts:62
	// assert(this.userData(this.txn.sender).exists)
	txn Sender
	box_len
	swap
	pop
	assert

	// contracts/Merrier.algo.ts:63
	// assert(this.userData(this.txn.sender).value.balance >= amount)
	txn Sender
	box_get
	assert
	extract 16 8
	btoi
	frame_dig -1 // amount: uint64
	>=
	assert

	// contracts/Merrier.algo.ts:65
	// sendPayment({
	//       amount: amount,
	//       receiver: this.txn.sender,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/Merrier.algo.ts:66
	// amount: amount
	frame_dig -1 // amount: uint64
	itxn_field Amount

	// contracts/Merrier.algo.ts:67
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/Merrier.algo.ts:70
	// data = this.userData(this.txn.sender).value
	txn Sender
	frame_bury -2 // storage key//data

	// contracts/Merrier.algo.ts:71
	// this.userData(this.txn.sender).value = {
	//       goal: data.goal,
	//       filled: data.filled,
	//       balance: data.balance - amount,
	//     }
	txn Sender
	frame_dig -2 // storage key//data
	box_get
	assert
	extract 0 8
	btoi
	itob
	frame_dig -2 // storage key//data
	box_get
	assert
	extract 8 8
	btoi
	itob
	concat
	frame_dig -2 // storage key//data
	box_get
	assert
	extract 16 8
	btoi
	frame_dig -1 // amount: uint64
	-
	itob
	concat
	box_put
	retsub

// withdrawAppBalace()void
abi_route_withdrawAppBalace:
	// execute withdrawAppBalace()void
	callsub withdrawAppBalace
	int 1
	return

withdrawAppBalace:
	proto 0 0

	// contracts/Merrier.algo.ts:79
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// contracts/Merrier.algo.ts:81
	// sendPayment({
	//       amount: this.appBalance.value,
	//       receiver: this.app.creator,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/Merrier.algo.ts:82
	// amount: this.appBalance.value
	byte 0x61707042616c616e6365 // "appBalance"
	app_global_get
	itxn_field Amount

	// contracts/Merrier.algo.ts:83
	// receiver: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	assert
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// getUserData(address)(uint64,uint64,uint64)
abi_route_getUserData:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// address: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute getUserData(address)(uint64,uint64,uint64)
	callsub getUserData
	int 1
	return

getUserData:
	proto 2 0

	// contracts/Merrier.algo.ts:88
	// values = this.userData(address).value
	frame_dig -1 // address: address
	frame_bury -2 // storage key//values

	// contracts/Merrier.algo.ts:90
	// return values;
	frame_dig -2 // storage key//values
	box_get
	assert
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// deregister()void
abi_route_deregister:
	byte 0x; dup // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute deregister()void
	callsub deregister
	int 1
	return

deregister:
	proto 2 0

	// contracts/Merrier.algo.ts:94
	// assert(this.userData(this.txn.sender).exists)
	txn Sender
	box_len
	swap
	pop
	assert

	// contracts/Merrier.algo.ts:96
	// preAppMBR = this.app.address.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_bury -1 // preAppMBR: uint64

	// contracts/Merrier.algo.ts:97
	// balance = this.userData(this.txn.sender).value.balance
	txn Sender
	box_get
	assert
	extract 16 8
	btoi
	frame_bury -2 // balance: uint64

	// contracts/Merrier.algo.ts:99
	// this.userData(this.txn.sender).delete()
	txn Sender
	box_del

	// contracts/Merrier.algo.ts:101
	// sendPayment({
	//       amount: balance + preAppMBR - this.app.address.minBalance,
	//       receiver: this.txn.sender,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/Merrier.algo.ts:102
	// amount: balance + preAppMBR - this.app.address.minBalance
	frame_dig -2 // balance: uint64
	frame_dig -1 // preAppMBR: uint64
	+
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	-
	itxn_field Amount

	// contracts/Merrier.algo.ts:103
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

create_NoOp:
	method "createApplication(uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "getMBR(pay)uint64"
	method "register(pay,uint64)void"
	method "support(pay,address)void"
	method "withdraw(uint64)void"
	method "withdrawAppBalace()void"
	method "getUserData(address)(uint64,uint64,uint64)"
	method "deregister()void"
	txna ApplicationArgs 0
	match abi_route_getMBR abi_route_register abi_route_support abi_route_withdraw abi_route_withdrawAppBalace abi_route_getUserData abi_route_deregister
	err